# Build stage
FROM node:20-alpine AS builder

# Install pnpm
RUN corepack enable && corepack prepare pnpm@9.15.3 --activate

WORKDIR /app

# Copy package files
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml .npmrc* ./

# Copy nx configuration
COPY nx.json tsconfig.base.json ./

# Install dependencies
RUN pnpm install --frozen-lockfile

# Copy source files
COPY apps/ui ./apps/ui

# Accept build arguments
ARG VITE_API_URL
ARG VITE_DYNAMIC_ENVIRONMENT_ID
ARG VITE_WALLETCONNECT_PROJECT_ID
ARG VITE_ENABLE_MFA
ARG VITE_ENABLE_BATCH_SIGNING

# Set environment variables for build
ENV VITE_API_URL=$VITE_API_URL
ENV VITE_DYNAMIC_ENVIRONMENT_ID=$VITE_DYNAMIC_ENVIRONMENT_ID
ENV VITE_WALLETCONNECT_PROJECT_ID=$VITE_WALLETCONNECT_PROJECT_ID
ENV VITE_ENABLE_MFA=$VITE_ENABLE_MFA
ENV VITE_ENABLE_BATCH_SIGNING=$VITE_ENABLE_BATCH_SIGNING

# Build the UI application
RUN pnpm nx run ui:build

# Production stage
FROM nginx:alpine

# Copy built assets from builder
COPY --from=builder /app/dist/apps/ui /usr/share/nginx/html

# Copy nginx configuration
COPY apps/ui/nginx.conf /etc/nginx/conf.d/default.conf

# Expose port
EXPOSE 8080

# Start nginx
CMD ["nginx", "-g", "daemon off;"]