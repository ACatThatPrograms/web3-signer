{
  "name": "api",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "apps/api/src",
  "projectType": "application",
  "test": {
    "executor": "@nx/jest:jest",
    "outputs": ["{workspaceRoot}/coverage/{projectRoot}"],
    "options": {
      "jestConfig": "apps/api/jest.config.ts",
      "passWithNoTests": false,
      "testEnvironment": "node"
    },
    "configurations": {
      "ci": {
        "ci": true,
        "codeCoverage": true
      }
    }
  },
  "targets": {
    "build": {
      "executor": "@nx/esbuild:esbuild",
      "outputs": ["{options.outputPath}"],
      "defaultConfiguration": "production",
      "options": {
        "platform": "node",
        "outputPath": "dist/apps/api",
        "format": ["cjs"],
        "bundle": false,
        "main": "apps/api/src/main.ts",
        "tsConfig": "apps/api/tsconfig.app.json",
        "assets": ["apps/api/src/assets"],
        "generatePackageJson": true,
        "esbuildOptions": {
          "sourcemap": true,
          "outExtension": {
            ".js": ".js"
          }
        }
      },
      "configurations": {
        "development": {},
        "production": {
          "esbuildOptions": {
            "sourcemap": false,
            "outExtension": {
              ".js": ".js"
            }
          }
        }
      }
    },
    "serve": {
      "executor": "@nx/js:node",
      "defaultConfiguration": "development",
      "options": {
        "buildTarget": "api:build",
        "runBuildTargetDependencies": false,
        "watch": true
      },
      "configurations": {
        "development": {
          "buildTarget": "api:build:development"
        },
        "production": {
          "buildTarget": "api:build:production"
        }
      }
    },
    "lint": {
      "executor": "@nx/eslint:lint",
      "outputs": ["{options.outputFile}"],
      "options": {
        "lintFilePatterns": ["apps/api/**/*.ts"]
      }
    },
    "prisma:generate": {
      "executor": "nx:run-commands",
      "options": {
        "command": "prisma generate --schema apps/api/prisma/schema.prisma"
      }
    },
    "prisma:migrate": {
      "executor": "nx:run-commands",
      "options": {
        "command": "prisma migrate dev --schema apps/api/prisma/schema.prisma"
      }
    },
    "prisma:migrate:deploy": {
      "executor": "nx:run-commands",
      "options": {
        "command": "prisma migrate deploy --schema apps/api/prisma/schema.prisma"
      }
    },
    "prisma:generate:psql": {
      "executor": "nx:run-commands",
      "options": {
        "command": "prisma generate --schema apps/api/prisma/schema.psql.prisma"
      }
    },
    "prisma:migrate:psql": {
      "executor": "nx:run-commands",
      "options": {
        "command": "prisma migrate dev --schema apps/api/prisma/schema.psql.prisma"
      }
    },
    "prisma:migrate:deploy:psql": {
      "executor": "nx:run-commands",
      "options": {
        "command": "prisma migrate deploy --schema apps/api/prisma/schema.psql.prisma"
      }
    },
    "prisma:studio": {
      "executor": "nx:run-commands",
      "options": {
        "command": "prisma studio --schema apps/api/prisma/schema.prisma"
      }
    },
    "prisma:seed": {
      "executor": "nx:run-commands",
      "options": {
        "command": "tsx apps/api/prisma/seed.ts"
      }
    },
    "prisma:reset": {
      "executor": "nx:run-commands",
      "options": {
        "command": "prisma migrate reset --schema apps/api/prisma/schema.prisma --force"
      }
    }
  },
  "tags": []
}